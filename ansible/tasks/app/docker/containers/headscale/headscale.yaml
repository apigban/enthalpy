---
- hosts: avogadro
  become: true
  gather_facts: false

  tasks:
  - name: Create headscale container volume
    community.docker.docker_volume:
      name: headscale_data

# https://github.com/juanfont/headscale/blob/main/docs/running-headscale-container.md#configure-and-run-headscale
  - name: Prepare a directory, used to hold headscale configuration and the SQLite database
    ansible.builtin.file:
      path: /var/lib/docker/volumes/headscale_data/_data/config
      state: directory

  - name: Create an empty sqlite3 DB file
    ansible.builtin.file:
      path: /var/lib/docker/volumes/headscale_data/_data/config/db.sqlite
      state: touch

  - name: render headscale config from template
    ansible.builtin.template:
      src: templates/config.yaml.j2
      dest: /var/lib/docker/volumes/headscale_data/_data/config/config.yaml

  # - name: Download headscale config example
  #   ansible.builtin.get_url:
  #     url: https://raw.githubusercontent.com/juanfont/headscale/main/config-example.yaml
  #     dest: /var/lib/docker/volumes/headscale_data/_data/config/config.yaml

  - name: Create a build directory if it does not exist
    file:
      path: /tmp/headscale
      state: directory
      mode: '0755'

  - name: Download headscale src
    git:
      repo: https://github.com/juanfont/headscale.git
      dest: /tmp/headscale

  - name: Build a headscale image
    community.docker.docker_image:
      name: headscale
      tag: latest
      build:
        path: /tmp/headscale
        dockerfile: /tmp/headscale/Dockerfile.alpine
      state: present
      source: build

# This command will mount config/ under /etc/headscale,
# forward port 8080,9090 out of the container so the headscale instance becomes available
  - name: Start container, connect to network and link
    community.docker.docker_container:
      name: headscale
      restart_policy: unless-stopped
      image: headscale:latest
      volumes:
        - /var/lib/docker/volumes/headscale_data/_data/config/:/etc/headscale/
        - ./container-data/data:/var/lib/headscale
      published_ports:
        - 8080:8080
        - 9090:9090
      command: headscale serve

  - name: Create a VPN namespace
    ansible.builtin.command: /usr/bin/docker exec headscale headscale namespaces create homelab

# version: '3.5'
# services:
#   headscale:
#     image: headscale/headscale:latest-alpine
#     container_name: headscale
#     volumes:
#       - ./container-config:/etc/headscale
#       - ./container-data/data:/var/lib/headscale
#     # ports:
#       # - 27896:8080
#     command: headscale serve
#     restart: unless-stopped
#   headscale-ui:
#     image: ghcr.io/gurucomputing/headscale-ui:latest
#     restart: unless-stopped
#     container_name: headscale-ui
#     # ports:
#       # - 9443:443

#   - name: Start portainer, connect to network
#     docker_container:
#       name: portainer
#       hostname: portainer
#       restart_policy: "unless-stopped"
#       image: "portainer/portainer-ce:latest"
#       published_ports:
#         - "8000:8000"
#         - "9443:9443"
#       volumes:
#         - "portainer_data:/data"
#         - "/var/run/docker.sock:/var/run/docker.sock"
#       state: "started"
#       keep_volumes: "yes"


# ---
# version: "2.1"
# services:
#   wireguard:
#     image: lscr.io/linuxserver/wireguard:latest
#     container_name: wireguard
#     cap_add:
#       - NET_ADMIN
#       - SYS_MODULE
#     environment:
#       - PUID=1000
#       - PGID=1000
#       - TZ=Europe/London
#       - SERVERURL=wireguard.domain.com #optional
#       - SERVERPORT=51820 #optional
#       - PEERS=1 #optional
#       - PEERDNS=auto #optional
#       - INTERNAL_SUBNET=10.13.13.0 #optional
#       - ALLOWEDIPS=0.0.0.0/0 #optional
#       - LOG_CONFS=true #optional
#     volumes:
#       - /path/to/appdata/config:/config
#       - /lib/modules:/lib/modules
#     ports:
#       - 51820:51820/udp
#     sysctls:
#       - net.ipv4.conf.all.src_valid_mark=1
#     restart: unless-stopped