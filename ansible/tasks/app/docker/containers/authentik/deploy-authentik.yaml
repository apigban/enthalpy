---
- hosts: avogadro
  become: true

  tasks:
  - name: Create authentik data volume
    community.docker.docker_volume:
      name: authentik_database_data
      state: present

  - name: Create cache data volume
    community.docker.docker_volume:
      name: authentik_cache_data
      state: present

  - name: Create authentik server media volume
    community.docker.docker_volume:
      name: authentik_server_media
      state: present      

  - name: Create authentik server template volume
    community.docker.docker_volume:
      name: authentik_server_template
      state: present  

  - name: Create database, connect to network
    community.docker.docker_container:
      name: authentik-postgres
      hostname: authentik-postgres
      image: "docker.io/library/postgres:12-alpine"
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -d authentik-postgres -U {{ user.authentik.db.name }}"]
        start_period: 20s
        interval: 30s
        retries: 5
        timeout: 5s
      restart_policy: "unless-stopped"
      volumes:
        - "authentik_database_data:/var/lib/postgresql/data"
        - "/var/run/docker.sock:/var/run/docker.sock"
      state: "started"
      keep_volumes: "yes"
      networks:
        - name: auth-backend
      env:
        POSTGRES_PASSWORD: "{{ user.authentik.db.password }}"
        POSTGRES_USER: "{{ user.authentik.db.username }}"
        POSTGRES_DB: "{{ user.authentik.db.name }}"
      cpus: 0.25
      memory: 200M

  - name: Create cache, connect to network
    community.docker.docker_container:
      name: authentik-redis
      hostname: authentik-redis
      image: "docker.io/library/redis:alpine"
      restart_policy: "unless-stopped"
      healthcheck:
        test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
        start_period: 20s
        interval: 30s
        retries: 5
        timeout: 3s
      volumes:
        - "authentik_cache_data:/var/lib/postgresql/data"
        - "/var/run/docker.sock:/var/run/docker.sock"
      state: "started"
      keep_volumes: "yes"
      networks:
        - name: auth-backend
      command: --save 60 1 --loglevel warning
      cpus: 0.25
      memory: 100M

  - name: Create authentik-server, connect to network
    community.docker.docker_container:
      name: authentik-server
      hostname: authentik-server
      image: "beryju/authentik:latest"
      command: server
      restart_policy: "unless-stopped"
      env:
        AUTHENTIK_REDIS__HOST: authentik-redis
        AUTHENTIK_POSTGRESQL__HOST: authentik-postgres
        AUTHENTIK_POSTGRESQL__USER: "{{ user.authentik.db.username }}"
        AUTHENTIK_POSTGRESQL__NAME: "{{ user.authentik.db.name }}"
        AUTHENTIK_POSTGRESQL__PASSWORD: "{{ user.authentik.db.password }}"
      volumes:
        - "authentik_server_media:/media"
        - "authentik_server_template:/templates"
      ports:
        - 9000:9000"
        - 9001:9443"  